[Main]
# If use_dd is set to no, then use_pup must be set to yes
use_dd: <%= node['mon-agent']['use_dd'] %>
dd_url: <%= node['mon-agent']['dd_url'] %>
api_key: <%= node['mon-agent']['api_key'] %>
debug_mode: <%= node['mon-agent']['debug'] %>
check_freq: <%= node['mon-agent']['check_freq'] %>
hostname: <%= node.name %>
use_mount: <%= node['mon-agent']['use_mount'] ? "yes" : "no"  %>
listen_port: <%= node['mon-agent']['agent_port'] %>


<% if !node['mon-agent']['dogstreams'].empty? -%>
dogstreams: <%= node['mon-agent']['dogstreams'].join(', ') %>
<% end -%>
<% if node['mon-agent']['graphite'] -%>
graphite_listen_port: <%= node['mon-agent']['graphite_port'] %>
<% end -%>

<% if node['mon-agent']['dogstatsd'] -%>
# ========================================================================== #
# DogStatsd configuration                                                    #
# ========================================================================== #
# DogStatsd is a small server that aggregates your custom app metrics. For
# usage information, check out http://docs.datadoghq.com
#  Make sure your client is sending to the same port.
dogstatsd_port : <%= node['mon-agent']['dogstatsd_port'] %>

## The dogstatsd flush period.
dogstatsd_interval : <%= node['mon-agent']['dogstatsd_interval'] %>

## If 'yes', counters and rates will be normalized to 1 second (that is divided
## by the dogstatsd_interval) before being sent to the server. Defaults to 'yes'
dogstatsd_normalize : <%= node['mon-agent']['dogstatsd_normalize'] %>

# If you want to forward every packet received by the dogstatsd server
# to another statsd server, uncomment these lines.
# WARNING: Make sure that forwarded packets are regular statsd packets and not "dogstatsd" packets,
# as your other statsd server might not be able to handle them.
# statsd_forward_host: address_of_own_statsd_server
# statsd_forward_port: 8125
<% end -%>

# ========================================================================== #
# Logging
# ========================================================================== #

log_level: <%= @setting['log_level']%>

collector_log_file: /var/log/mon-agent/collector.log
forwarder_log_file: /var/log/mon-agent/forwarder.log
dogstatsd_log_file: /var/log/mon-agent/dogstatsd.log
pup_log_file: /var/log/mon-agent/pup.log

# if syslog is enabled but a host and port are not set, a local domain socket
# connection will be attempted
#
log_to_syslog: <%= node['mon-agent']['syslog']['active'] ? 'yes' : 'no' %>
<% if node['mon-agent']['syslog']['udp'] -%>
syslog_host: <%= node['mon-agent']['syslog']['host'] %>
syslog_port: <%= node['mon-agent']['syslog']['port'] %>
<% end -%>
disable_file_logging: <%= node['mon-agent']['disable_file_logging'] %>

# ========================================================================== #
# Pup configuration
# ========================================================================== #

# Pup is a small server that displays metric data collected by the Agent.
# Think of it as a fancy status page or a toe dip into the world of
# datadog. It can be connected to on the port below.

use_pup: <%= node['mon-agent']['use_pup'] %>
pup_port: <%= node['mon-agent']['pup_port'] %>
pup_interface: <%= node['mon-agent']['pup_interface'] %>
pup_url: <%= node['mon-agent']['pup_url'] %>

# ========================================================================== #
# Mon-API Configuration
# ========================================================================== #

#Controls whether metrics are sent to the mon-api
send_to_mon_api: <%= @setting['send_to_mon_api']%>

# Monitoring API URL: URL for the monitoring API
mon_api_url: <%= @setting['api']['mon_api_url']%>

# Monitoring API Project Id: Project Id for the monitoring API
mon_api_project_id: <%= @setting['api']['mon_api_project_id'] %>

# Monitoring API Username: Username for the monitoring API
mon_api_username: <%= @setting['api']['mon_api_username'] %>

# Monitoring API Password: Password for the monitoring API
mon_api_password: <%= @setting['api']['mon_api_password'] %>

# Use Keystone for Authentication?: Use Keystone for authentication
# True or False
use_keystone: <%= @setting['api']['use_keystone'] %>

# Keystone API URL: URL for the Keystone server to use
keystone_url: <%= @setting['api']['keystone_url'] %>

# Aggregate Metrics?: Send single message or message for each metric
# True or False
aggregate_metrics: <%= @setting['api']['aggregate_metrics'] %>

# Mapping file for monitoring metrics
mon_mapping_file: <%= node['mon-agent']['mon_mapping_file'] %>

# Optional dimensions to be sent with every metric from this node
# They should be in the format name:value and seperated by a comma
# Example (dimensions: Environment:Test, Origin:Mini-Mon, ...)
<%
# Dimensions may exist globally in data bags, or per-node in attributes.
# Combine as needed into a single comma-delimited string.
if @setting['dimensions'].to_s != '' and
 node['mon-agent']['dimensions'].to_s != ''
  dimensions = [@setting['dimensions'],
    node['mon-agent']['dimensions']].join(', ')
elsif @setting['dimensions'].to_s != ''
  dimensions = @setting['dimensions']
elsif node['mon-agent']['dimensions'].to_s != ''
  dimensions = node['mon-agent']['dimensions']
end
-%>
dimensions: <%= dimensions -%>

# ========================================================================== #
# Custom Emitters                                                            #
# ========================================================================== #

# Comma-separated list of emitters to be used in addition to the standard one
#
# Expected to be passed as a comma-separated list of colon-delimited
# name/object pairs.
#
custom_emitters: <%= node['mon-agent']['custom_emitters'] %>

